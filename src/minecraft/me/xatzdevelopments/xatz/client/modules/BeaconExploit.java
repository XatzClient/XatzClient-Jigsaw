package me.xatzdevelopments.xatz.client.modules;

import java.io.IOException;

import io.netty.buffer.Unpooled;
import me.xatzdevelopments.xatz.client.main.Xatz;
import me.xatzdevelopments.xatz.client.module.state.Category;
import me.xatzdevelopments.xatz.module.Module;
import net.minecraft.client.resources.I18n;
import net.minecraft.network.AbstractPacket;
import net.minecraft.network.PacketBuffer;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import net.minecraft.potion.Potion;

public class BeaconExploit extends Module {

	public static boolean enabled = false;

	public BeaconExploit() {
		super("BeaconExploit", 0, Category.EXPLOITS, "Gets the whole use out of the beacon.");
	}
		  
	@Override
	public void onPacketSent(AbstractPacket p) {
		    if (((p instanceof C17PacketCustomPayload)) && 
		    		("MC|BEdit".equals(C17PacketCustomPayload.getChannelName()))) {
		    	Xatz.chatMessage("SET");
		    try {

	            PacketBuffer packetbuffer = new PacketBuffer(Unpooled.buffer());

		      packetbuffer.writeInt(BeaconPotion.STRENGTH.potionID);
		      packetbuffer.writeInt(BeaconPotion.SPEED.potionID);
		     
				p.writePacketData(packetbuffer);
		    	
		    
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		    }
	}
		  
	public static enum BeaconPotion
	  
	  {
	    EMPTY("Empty", 0),  SPEED(Potion.moveSpeed),  HASTE(Potion.digSpeed),  RESISTANCE(Potion.resistance),  JUMP(
	      Potion.jump),  STRENGTH(Potion.damageBoost),  REGENERATION(Potion.regeneration);
	    
	    String name;
	    int potionID;
	    
	    private BeaconPotion(String name, int potionID)
	    {
	      this.name = name;
	      this.potionID = potionID;
	    }
	    
	    private BeaconPotion(Potion potion)
	    {
	      this.name = I18n.format(potion.getName(), new Object[0]);
	      this.potionID = potion.id;
	    }
	    
	    public int getPotionID()
	    {
	      return this.potionID;
	    }
	    
	    public String getDisplayname()
	    {
	      return this.name;
	    }
	  }
}